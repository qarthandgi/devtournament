# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-01-14 16:19
from __future__ import unicode_literals

import app.models
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('subscription', models.CharField(choices=[(None, 'None'), ('basic', 'Basic'), ('premium', 'Premium')], default='basic', max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', app.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CompanyExercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('objective', models.TextField()),
                ('working_query', models.TextField()),
                ('expected_headers', models.BinaryField()),
                ('expected_rows', models.BinaryField()),
                ('column_descriptions', django.contrib.postgres.fields.jsonb.JSONField()),
                ('subject', models.CharField(choices=[('postgres', 'Postgres')], default='postgres', max_length=20)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('position', models.IntegerField(default=0)),
                ('difficulty', models.CharField(choices=[('novice', 'Novice'), ('intermediate', 'Intermediate'), ('advanced', 'advanced')], default='novice', max_length=20)),
                ('new', models.BooleanField(default=False)),
                ('needed_subscription', models.CharField(blank=True, choices=[(None, 'None'), ('basic', 'Basic'), ('premium', 'Premium')], default='basic', max_length=15, null=True)),
                ('enabled', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_name', models.CharField(max_length=30)),
                ('full_name', models.CharField(max_length=40)),
                ('num_tables', models.IntegerField()),
                ('last_built', models.DateTimeField(blank=True)),
                ('icon_link', models.CharField(max_length=700)),
                ('needed_subscription', models.CharField(blank=True, choices=[(None, 'None'), ('basic', 'Basic'), ('premium', 'Premium')], default='basic', max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Global',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_company_exercise', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_to_invitee', models.BooleanField(default=True)),
                ('invitee_s', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('in progress', 'In Progress'), ('successfully completed', 'Successfully Completed')], default='pending', max_length=30)),
                ('enabled', models.BooleanField(default=True)),
                ('archived', models.BooleanField(default=False)),
                ('last_query', models.TextField(blank=True, null=True)),
                ('successful_query', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserExercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('objective', models.TextField()),
                ('working_query', models.TextField()),
                ('expected_headers', models.BinaryField()),
                ('expected_rows', models.BinaryField()),
                ('column_descriptions', django.contrib.postgres.fields.jsonb.JSONField()),
                ('subject', models.CharField(choices=[('postgres', 'Postgres')], default='postgres', max_length=20)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('position', models.IntegerField(default=0)),
                ('shareable', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('db', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Database')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='invitation',
            name='exercise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.UserExercise'),
        ),
        migrations.AddField(
            model_name='invitation',
            name='invitee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invitation',
            name='inviter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites_sent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='companyexercise',
            name='db',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Database'),
        ),
    ]
